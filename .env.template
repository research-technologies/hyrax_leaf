# Solr
SOLR_URL_SCHEME=http
SOLR_HOST=solr
SOLR_PORT=8983
SOLR_CORE=hyrax_production

# Database - https://hub.docker.com/_/postgres
#   Note: ensure the HOST matches your docker-compose (if using docker containers)
POSTGRES_HOST=postgresdb
POSTGRES_PORT=5432
POSTGRES_PASSWORD=password
POSTGRES_USER=postgres
PGDATA=/var/lib/postgresql/data/pgdata

# Optional -  db to create automatically in postgres
# if using postgres with fedora in terraform we need to explicitly set this, with docker-compose the compose file will set it
POSTGRES_DB=fcrepo

HYRAX_DB=hyrax_production

# Redis
REDIS_HOST=redis
REDIS_PORT=6379

# Fedora
FCREPO_URL_SCHEME=http
FCREPO_HOST=fcrepo
FCREPO_PORT=8080
# FCREPO_ENDPOINT=hyrax_production # Optional - default is production
# FCREPO_PATH='/rest' # Optional - default is /fcrepo/rest
FCREPO_VERSION=4.7.5
FCREPO_DB=fcrepo
# FCREPO_USER
# FCREPO_PASSWORD

# Using fcrepo with postgres in docker/terraform
# JAVA_OPTS=-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC -Dfcrepo.home=/data -Dfcrepo.postgresql.username=$POSTGRES_USER -Dfcrepo.postgresql.password=$POSTGRES_PASSWORD -Dfcrepo.postgresql.host=$POSTGRES_HOST -Dfcrepo.postgresql.port=$POSTGRES_PORT -Dfcrepo.modeshape.configuration=classpath:/config/jdbc-postgresql/repository.json
# Using file-simple
# JAVA_OPTS=-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC -Dfcrepo.home=/data -Dfcrepo.modeshape.configuration=classpath:/config/file-simple/repository.json

# Rails
LANG=C.UTF-8
RAILS_PORT=3000
EXTERNAL_PORT=3000
RAILS_SERVE_STATIC_FILES=true
RAILS_MAX_THREADS=5
RAILS_ENV=production
# RAILS_LOG_TO_STDOUT=true # Optional - set this to log directly to stdout
RAILS_TMP=/tmp
DEFAULT_DATE_FORMAT=%d/%m/%Y
# SECRET_KEY_BASE and DEVISE_SECRET_KEY should be a very long random key.
# You can use "$ bundle exec rails secret" to generate one.
SECRET_KEY_BASE=
DEVISE_SECRET_KEY=
HYRAX_DB=hyrax_production 

# Application email config
SMTP_EMAIL=
SMTP_PASSWORD=
# SMTP_DOMAIN=cosector.com # Optional - default is gmail.com
# SMTP_ADDRESS= # Optional - default is smtp.gmail.com
# SMTP_AUTH=:login # Optional - default is 'plain'
CONTACT_EMAIL=
FROM_EMAIL=
USER_MANAGEMENT_EMAIL_FROM_ADDRESS=repo-admin@example.org
NOTIFICATIONS_EMAIL_DEFAULT_FROM_ADDRESS=no-reply@mailboxer.com
CONTACT_FORM_RECIPIENT_EMAIL="repo-admin@example.org"
CONTACT_FORM_SUBJECT_PREFIX=Contact form:

# Application google analytics
GOOGLE_ANALYTICS_ID=
GA_APP_NAME=
GA_APP_VERSION=
GA_PRIVATE_KEY_PATH=
GA_PRIVATE_KEY_SECRET=
GA_CLIENT_EMAIL=

# Application paths
DERIVATIVES_PATH=/data/derivatives

# Recommendation is to use the same base path for uploads, cache and working (eg. as follows)
UPLOADS_PATH=/data/uploads/ # requires the trailing slash
CACHE_PATH=/data/uploads/cache
WORKING_PATH=/data/uploads/working

# branding images will be served on the web
# DO NOT change BRANDING_PATH
BRANDING_PATH=public/branding
# the script will symlink the source to the path to faciliate storing branding images on a mount
SOURCE_BRANDING_PATH=/data/branding

PIDS_PATH=/var/run/hyrax
# LOGS_PATH= # Optional - application log directory will be used as default

# Application tools
FITS_VERSION=fits-1.0.5
# FITS_PATH= # Optional - default is /fits/{FITS_VERSION}/fits.sh
# LIBREOFFICE_PATH= # Optional - default is soffice

# Geonames username
GEONAMES=

IIIF_SEARCH_ENDPOINT= # search endpoint url, leave blank for no endpoint
CONFIG_IIIF_IMAGE_ENDPOINT= # image endpoint url, leave blank for default (RIIF)

# Application 
APPLICATION_NAME=
# BANNER= # Optional - default is banner.jpg
APPLICATION_HOST= # Application hostname

# Application gem (is cloned to /vendor/ and the install generator is run to app customizations)
#   leave these blank to build a vanilla hyrax_leaf
#   the gem must have an install generator (eg. rails g hull_culture:install)
#   the gem must have an initialize generator for one off build tasks (eg. admin set create) (eg. rails g hull_culture:initialize)
GEM_KEY=
GEM_SOURCE= #https://github.com/research-technologies or whereever
# relative to the current directory, DO NOT COMMIT!
SSH_PRIVATE_KEY=docker/id_rsa

# Application docker related
APPLICATION_KEY=hyrax

# Details for admin account, DO NOT COMMIT!
ADMIN_EMAIL=
ADMIN_USERNAME=
ADMIN_PASSWORD=

# Docker
APP_WORKDIR=/app

# If OAI-PMH has been configured with leaf_addons:oai_pmh
# OAI_REPO_NAME=
# OAI_REPO_URL=http://localhost:3000/catalog/oai
# OAI_PREFIX=oai:hyrax
# OAI_ADMIN_EMAIL=
# OAI_SAMPLE_ID=
